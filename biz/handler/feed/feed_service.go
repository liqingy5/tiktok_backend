// Code generated by hertz generator.

package feed

import (
	"context"
	"fmt"
	"github.com/cloudwego/hertz/pkg/app"
	"github.com/cloudwego/hertz/pkg/protocol/consts"
	"log"
	feed "tiktok_backend/biz/model/feed"
	"tiktok_backend/config"
	_ "tiktok_backend/config"
	"tiktok_backend/model"
	"tiktok_backend/pack"
	"time"
)

// GetFeeds .
// @router /douyin/feed [GET]
func GetFeeds(ctx context.Context, c *app.RequestContext) {
	var err error
	var logger = log.Default()
	var req feed.DouyinFeedRequest
	config.Connect()
	var DBObj = config.GetDB()
	err = c.BindAndValidate(&req)
	fmt.Println("Getting a request")
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}
	var startTime = req.GetLatestTime()
	logger.Println("Start time passed in the request: ", startTime)
	videos := make([]*model.Video, 30)
	db := DBObj.Where("create_time > ? ", +startTime).Order("create_time").Limit(30)

	resp := new(feed.DouyinFeedResponse)
	if err := db.Find(&videos).Error; err != nil {
		logger.Println("Error while getting feeds: ", err)
		*resp.StatusCode = consts.StatusBadRequest
		c.JSON(consts.StatusBadRequest, resp)
		return
	}
	resp.Video_list = pack.Videos(videos)
	resp.NextTime = new(int64)
	*resp.NextTime = time.Now().Unix()

	c.JSON(consts.StatusOK, resp)
	return
}
